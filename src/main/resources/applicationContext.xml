<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                       http://www.springframework.org/schema/context
                       http://www.springframework.org/schema/context/spring-context-2.5.xsd
                       http://www.springframework.org/schema/aop
                       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                       http://www.springframework.org/schema/tx
                       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
                       
	
		
	

	
	<!-- data source 基本的连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://192.168.8.60:3306/shcrawler?useUnicode=true&amp;characterEncoding=utf8"/> 
		<property name="username" value="root"/>
		<property name="password" value="123456"/>
		<property name="maxWait"            value="1000" />
        <property name="initialSize"        value="5" />
        <property name="maxActive"          value="20" />
        <property name="maxIdle"            value="5" />
        <property name="testWhileIdle"      value="true" />
        <property name="timeBetweenEvictionRunsMillis"  value="15000" />
        <property name="numTestsPerEvictionRun"         value="20" />
        <property name="validationQuery"    value="SELECT 1 FROM DUAL" />
        <property name="removeAbandoned"    value="true" />
        <property name="removeAbandonedTimeout"         value="180" />
	</bean>
	<!-- Hibernate3 Session Factory: 注意这里使用的是AnnotationSessionFactoryBean -->
	<!-- 这里配置后就可以省去Hibernate的与持久类对应的.hbm.xml文件了，持久类使用注释@Entity-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop>  -->
			</props>
		</property>
		<!-- 这个属性指明了使用注释的持久类的包-->
		<property name="packagesToScan">
			<list>
				<value>com.hit.forecast.model</value>
			</list>
		</property>
		</bean>
	
	<!-- 用于在Dao中使用 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Transaction Manager 事务管理器-->
	<bean id="txManager" 
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 这里配置后就不用再使用bean标签配置bean了 -->
	<context:annotation-config>
	
	</context:annotation-config>
	
	<!-- 去哪个包扫描生成bean -->
 	<context:component-scan base-package="com.hit.forecast.*" /> 
	
	<aop:config>
		<aop:pointcut  expression="execution(public * com.hit.forecast.service.impl.*.*(..))" id="businessService"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService"/>
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED"/>
		   	<tx:method name="find*" read-only="true" />
		   <tx:method name="update*" propagation="REQUIRED"/>
		   <tx:method name="delete*" propagation="REQUIRED"/>
		</tx:attributes> 
	</tx:advice>
</beans>